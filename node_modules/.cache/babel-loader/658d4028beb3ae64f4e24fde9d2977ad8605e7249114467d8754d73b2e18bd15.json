{"ast":null,"code":"var _jsxFileName = \"/Users/brandonchin/web-call-logs/src/InputScreen.js\",\n  _s = $RefreshSig$();\nimport clericLogo from './assets/clericLogo.svg';\nimport './InputScreen.css';\nimport { useState, useEffect, useId, createRef } from 'react';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport TypeWriterText from './TypewriterText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputScreen() {\n  _s();\n  const questionId = useId();\n  const callLogListId = useId();\n  const [question, setQuestion] = useState('');\n  const [callLogs, setCallLogs] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/submit_question_and_documents', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: question,\n          documents: callLogs\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit data');\n      }\n      console.log('Data submitted successfully');\n      setError(null);\n    } catch (error) {\n      setError('Failed to submit data');\n      console.error('Error:', error);\n    }\n    navigate('/output');\n  };\n  const checkIfList = inputString => {\n    const trimmedInput = inputString.trim();\n    const items = trimmedInput.split(',');\n    if (!inputString.includes('[') || !inputString.includes(']')) {\n      return false;\n    }\n    return items.every(item => item.trim() != '');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Input-Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Input-Page-Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: clericLogo,\n        className: \"App-Logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Assignment\",\n        children: \"Take Home Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Top-Name\",\n        children: \"Brandon Chin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"Input-Page-Body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Square-Div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TypeWriter-Container\",\n          children: /*#__PURE__*/_jsxDEV(TypeWriterText, {\n            text: \"Welcome!\",\n            className: \"Welcome-Text-Container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Question-Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: questionId,\n            className: \"Label-Input\",\n            children: \"Please input your question!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: questionId,\n            className: \"Question-Input\",\n            type: \"text\",\n            placeholder: \"Enter your question...\",\n            onChange: e => setQuestion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Logs-Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: callLogListId,\n            className: \"Label-Input\",\n            children: \"Please input your call logs as a list eg. [item1, item2]!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: callLogListId,\n            className: \"Logs-Input\",\n            placeholder: \"Enter your call logs...\",\n            onChange: e => setCallLogs(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), question && callLogs && typeof question === 'string' && checkIfList(callLogs) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"Submit-Button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(InputScreen, \"TjtNvRxghIvJhRGyb6dtLbgZbxI=\", false, function () {\n  return [useId, useId, useNavigate];\n});\n_c = InputScreen;\nexport default InputScreen;\nvar _c;\n$RefreshReg$(_c, \"InputScreen\");","map":{"version":3,"names":["clericLogo","useState","useEffect","useId","createRef","BrowserRouter","useNavigate","TypeWriterText","jsxDEV","_jsxDEV","InputScreen","_s","questionId","callLogListId","question","setQuestion","callLogs","setCallLogs","error","setError","navigate","handleSubmit","response","fetch","method","headers","body","JSON","stringify","documents","ok","Error","console","log","checkIfList","inputString","trimmedInput","trim","items","split","includes","every","item","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","htmlFor","id","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/brandonchin/web-call-logs/src/InputScreen.js"],"sourcesContent":["import clericLogo from './assets/clericLogo.svg';\nimport './InputScreen.css';\nimport { useState, useEffect, useId, createRef } from 'react';\nimport { BrowserRouter, useNavigate } from 'react-router-dom'; \nimport TypeWriterText from './TypewriterText';\n\nfunction InputScreen() {\n  const questionId = useId();\n  const callLogListId = useId();\n  const [question, setQuestion] = useState('');\n  const [callLogs, setCallLogs] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/submit_question_and_documents', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          question: question,\n          documents: callLogs,\n        }),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit data');\n      }\n      console.log('Data submitted successfully');\n      setError(null);\n\n    } catch (error) {\n      setError('Failed to submit data');\n      console.error('Error:', error);\n  \n    }\n    navigate('/output');\n  };\n\n  const checkIfList = (inputString) => {\n    const trimmedInput = inputString.trim();\n    const items = trimmedInput.split(',');\n    if ((!inputString.includes('[')) || (!inputString.includes(']'))) {\n      return false\n    }\n    return items.every(item => item.trim() != '');\n  }\n\n  return (\n    <div className=\"Input-Page\">\n      <header className=\"Input-Page-Header\">\n        <img src={clericLogo} className=\"App-Logo\" alt=\"logo\" />\n        <h2 className=\"Assignment\">Take Home Assignment</h2>\n        <h2 className=\"Top-Name\">Brandon Chin</h2>\n      </header>\n      <body className=\"Input-Page-Body\">\n        <div className=\"Square-Div\">\n          <div className=\"TypeWriter-Container\">\n            <TypeWriterText text=\"Welcome!\" className=\"Welcome-Text-Container\" />\n          </div>\n          <div className=\"Question-Container\">\n            <label htmlFor={questionId} className=\"Label-Input\">\n              Please input your question!\n            </label>\n            <input \n              id={questionId}\n             className=\"Question-Input\" \n             type=\"text\" \n             placeholder=\"Enter your question...\"\n             onChange={(e) => setQuestion(e.target.value)} \n             />\n          </div>\n\n          <div className=\"Logs-Container\">\n            <label htmlFor={callLogListId} className=\"Label-Input\">\n              Please input your call logs as a list eg. [item1, item2]!\n            </label>\n            <textarea \n              id={callLogListId} \n              className=\"Logs-Input\" \n              placeholder=\"Enter your call logs...\"\n              onChange={(e) => setCallLogs(e.target.value)}/>\n          </div>\n\n          {question && callLogs && typeof question === 'string' && checkIfList(callLogs) && (\n            <button \n              onClick={handleSubmit}\n              className=\"Submit-Button\"\n            >Submit</button>\n          )}\n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default InputScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}