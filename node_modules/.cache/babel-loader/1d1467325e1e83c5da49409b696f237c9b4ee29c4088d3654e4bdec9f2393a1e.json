{"ast":null,"code":"var _jsxFileName = \"/Users/brandonchin/web-call-logs/src/OutputScreen.js\",\n  _s = $RefreshSig$();\nimport clericLogo from './assets/clericLogo.svg';\nimport './OutputScreen.css';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TypeWriterText from './TypewriterText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OutputScreen() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [facts, setFacts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/get_questions_and_facts', {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      setQuestion(data.question);\n      setFacts(data.facts);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Input-Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Input-Page-Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: clericLogo,\n        className: \"App-Logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Assignment\",\n        children: \"Take Home Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Top-Name\",\n        children: \"Brandon Chin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"Input-Page-Body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Square-Div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TypeWriter-Container\",\n          children: /*#__PURE__*/_jsxDEV(TypeWriterText, {\n            text: \"Here are the facts!\",\n            className: \"Welcome-Text-Container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Response-Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Question\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: facts.map((fact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"Facts\",\n              children: fact\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(OutputScreen, \"0Ih5EIxD5C01mc40/JixOZZmE2M=\", false, function () {\n  return [useNavigate];\n});\n_c = OutputScreen;\nexport default OutputScreen;\nvar _c;\n$RefreshReg$(_c, \"OutputScreen\");","map":{"version":3,"names":["clericLogo","useState","useEffect","useNavigate","TypeWriterText","jsxDEV","_jsxDEV","OutputScreen","_s","question","setQuestion","facts","setFacts","loading","setLoading","navigate","fetchData","response","fetch","method","ok","Error","data","json","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","map","fact","index","_c","$RefreshReg$"],"sources":["/Users/brandonchin/web-call-logs/src/OutputScreen.js"],"sourcesContent":["import clericLogo from './assets/clericLogo.svg';\nimport './OutputScreen.css';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; \nimport TypeWriterText from './TypewriterText';\n\nfunction OutputScreen() {\n    const [question, setQuestion] = useState('');\n    const [facts, setFacts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n  \n    const fetchData = async () => {\n        try {\n          const response = await fetch('http://127.0.0.1:5000/get_questions_and_facts', {\n            method: 'GET',\n          });\n    \n          if (!response.ok) {\n            throw new Error('Failed to fetch data');\n          }\n    \n          const data = await response.json();\n          setQuestion(data.question);\n          setFacts(data.facts);\n        } catch (error) {\n          console.error('Error:', error);\n        } finally {\n            setLoading(false);\n        }\n      };\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n    return (\n    <div className=\"Input-Page\">\n      <header className=\"Input-Page-Header\">\n        <img src={clericLogo} className=\"App-Logo\" alt=\"logo\" />\n        <h2 className=\"Assignment\">Take Home Assignment</h2>\n        <h2 className=\"Top-Name\">Brandon Chin</h2>\n      </header>\n      <body className=\"Input-Page-Body\">\n        <div className=\"Square-Div\">\n          <div className=\"TypeWriter-Container\">\n            <TypeWriterText text=\"Here are the facts!\" className=\"Welcome-Text-Container\" />\n          </div>\n          <div className=\"Response-Container\">\n            <h1 className=\"Question\">{question}</h1>\n            <ul>\n              {facts.map((fact, index) => (\n                <li key={index} className=\"Facts\">{fact}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </body>\n    </div>\n    );\n}\n\nexport default OutputScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}